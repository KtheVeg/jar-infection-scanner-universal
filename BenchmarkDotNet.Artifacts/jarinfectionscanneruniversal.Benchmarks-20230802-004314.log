// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 1 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in /home/kale/Github/jar-infection-scanner-universal/bin/Release/net6.0/3676d8d5-2c71-4885-b34f-e5a940934dd2
// command took 1.77 sec and exited with 1
// ***** Done, took 00:00:02 (2.06 sec)   *****
// Found 1 benchmarks:
//   Benchmarks.Test: DefaultJob

// Build Error: Standard output: 
  
 Standard error: 
   Determining projects to restore...
/home/kale/Github/jar-infection-scanner-universal/jarinfectionscanneruniversal.csproj : warning NU1608: Detected package version outside of dependency constraint: Microsoft.CodeAnalysis.CSharp.Scripting 3.8.0 requires Microsoft.CodeAnalysis.Common (= 3.8.0) but version Microsoft.CodeAnalysis.Common 4.1.0 was resolved. [/home/kale/Github/jar-infection-scanner-universal/bin/Release/net6.0/3676d8d5-2c71-4885-b34f-e5a940934dd2/BenchmarkDotNet.Autogenerated.csproj]
/home/kale/Github/jar-infection-scanner-universal/bin/Release/net6.0/3676d8d5-2c71-4885-b34f-e5a940934dd2/BenchmarkDotNet.Autogenerated.csproj : warning NU1608: Detected package version outside of dependency constraint: Microsoft.CodeAnalysis.CSharp.Scripting 3.8.0 requires Microsoft.CodeAnalysis.Common (= 3.8.0) but version Microsoft.CodeAnalysis.Common 4.1.0 was resolved.
/home/kale/Github/jar-infection-scanner-universal/jarinfectionscanneruniversal.csproj : warning NU1608: Detected package version outside of dependency constraint: Microsoft.CodeAnalysis.Scripting.Common 3.8.0 requires Microsoft.CodeAnalysis.Common (= 3.8.0) but version Microsoft.CodeAnalysis.Common 4.1.0 was resolved. [/home/kale/Github/jar-infection-scanner-universal/bin/Release/net6.0/3676d8d5-2c71-4885-b34f-e5a940934dd2/BenchmarkDotNet.Autogenerated.csproj]
/home/kale/Github/jar-infection-scanner-universal/bin/Release/net6.0/3676d8d5-2c71-4885-b34f-e5a940934dd2/BenchmarkDotNet.Autogenerated.csproj : warning NU1608: Detected package version outside of dependency constraint: Microsoft.CodeAnalysis.Scripting.Common 3.8.0 requires Microsoft.CodeAnalysis.Common (= 3.8.0) but version Microsoft.CodeAnalysis.Common 4.1.0 was resolved.
/home/kale/Github/jar-infection-scanner-universal/jarinfectionscanneruniversal.csproj : error NU1107: Version conflict detected for Microsoft.CodeAnalysis.CSharp. Install/reference Microsoft.CodeAnalysis.CSharp 4.1.0 directly to project jarinfectionscanneruniversal to resolve this issue.  [/home/kale/Github/jar-infection-scanner-universal/bin/Release/net6.0/3676d8d5-2c71-4885-b34f-e5a940934dd2/BenchmarkDotNet.Autogenerated.csproj]
/home/kale/Github/jar-infection-scanner-universal/jarinfectionscanneruniversal.csproj : error NU1107:  jarinfectionscanneruniversal -> BenchmarkDotNet 0.13.6 -> Microsoft.CodeAnalysis.CSharp (>= 4.1.0)  [/home/kale/Github/jar-infection-scanner-universal/bin/Release/net6.0/3676d8d5-2c71-4885-b34f-e5a940934dd2/BenchmarkDotNet.Autogenerated.csproj]
/home/kale/Github/jar-infection-scanner-universal/jarinfectionscanneruniversal.csproj : error NU1107:  jarinfectionscanneruniversal -> Avalonia.Diagnostics 11.0.0 -> Microsoft.CodeAnalysis.CSharp.Scripting 3.8.0 -> Microsoft.CodeAnalysis.CSharp (= 3.8.0). [/home/kale/Github/jar-infection-scanner-universal/bin/Release/net6.0/3676d8d5-2c71-4885-b34f-e5a940934dd2/BenchmarkDotNet.Autogenerated.csproj]
/home/kale/Github/jar-infection-scanner-universal/bin/Release/net6.0/3676d8d5-2c71-4885-b34f-e5a940934dd2/BenchmarkDotNet.Autogenerated.csproj : error NU1107: Version conflict detected for Microsoft.CodeAnalysis.CSharp. Install/reference Microsoft.CodeAnalysis.CSharp 4.1.0 directly to project 3676d8d5-2c71-4885-b34f-e5a940934dd2 to resolve this issue. 
/home/kale/Github/jar-infection-scanner-universal/bin/Release/net6.0/3676d8d5-2c71-4885-b34f-e5a940934dd2/BenchmarkDotNet.Autogenerated.csproj : error NU1107:  3676d8d5-2c71-4885-b34f-e5a940934dd2 -> BenchmarkDotNet 0.13.6 -> Microsoft.CodeAnalysis.CSharp (>= 4.1.0) 
/home/kale/Github/jar-infection-scanner-universal/bin/Release/net6.0/3676d8d5-2c71-4885-b34f-e5a940934dd2/BenchmarkDotNet.Autogenerated.csproj : error NU1107:  3676d8d5-2c71-4885-b34f-e5a940934dd2 -> Avalonia.Diagnostics 11.0.0 -> Microsoft.CodeAnalysis.CSharp.Scripting 3.8.0 -> Microsoft.CodeAnalysis.CSharp (= 3.8.0).
  Failed to restore /home/kale/Github/jar-infection-scanner-universal/jarinfectionscanneruniversal.csproj (in 564 ms).
  Failed to restore /home/kale/Github/jar-infection-scanner-universal/bin/Release/net6.0/3676d8d5-2c71-4885-b34f-e5a940934dd2/BenchmarkDotNet.Autogenerated.csproj (in 564 ms).

// BenchmarkDotNet has failed to build the auto-generated boilerplate code.
// It can be found in /home/kale/Github/jar-infection-scanner-universal/bin/Release/net6.0/3676d8d5-2c71-4885-b34f-e5a940934dd2
// Please follow the troubleshooting guide: https://benchmarkdotnet.org/articles/guides/troubleshooting.html

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2023-08-02 0:43 (0h 0m from now) **
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts/results/jarinfectionscanneruniversal.Benchmarks-report.csv
  BenchmarkDotNet.Artifacts/results/jarinfectionscanneruniversal.Benchmarks-report-github.md
  BenchmarkDotNet.Artifacts/results/jarinfectionscanneruniversal.Benchmarks-report.html

// * Detailed results *
Benchmarks.Test: DefaultJob
Runtime = ; GC = 
There are not any results runs

// * Summary *

BenchmarkDotNet v0.13.6, Pop!_OS 22.04 LTS
Intel Core i5-8250U CPU 1.60GHz (Kaby Lake R), 1 CPU, 8 logical and 4 physical cores
.NET SDK 6.0.120
  [Host] : .NET 6.0.20 (6.0.2023.32301), X64 RyuJIT AVX2


| Method | Mean | Error | Rank |
|------- |-----:|------:|-----:|
|   Test |   NA |    NA |    ? |

Benchmarks with issues:
  Benchmarks.Test: DefaultJob

// * Legends *
  Mean  : Arithmetic mean of all measurements
  Error : Half of 99.9% confidence interval
  Rank  : Relative position of current benchmark mean among all benchmarks (Arabic style)
  1 ns  : 1 Nanosecond (0.000000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:00 (0.05 sec), executed benchmarks: 0

Global total time: 00:00:02 (2.41 sec), executed benchmarks: 0
// * Artifacts cleanup *
Artifacts cleanup is finished
